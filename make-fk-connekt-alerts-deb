#!/bin/bash -e

echo "Starting build"

function die() {
    echo "ERROR: $1" >&2
    echo "Aborting." >&2
    exit 1
}

[ -n "$LOCAL_DIR" ]	|| die "No base dir specified."
[ -n "$TARGET" ]	|| die "No target environment (eng, sb, nm etc.) specified."
[ -n "$PACKAGE" ]	|| die "No package name specified."
[ -d "$LOCAL_DIR" ]	|| die "Base dir '$LOCAL_DIR' does not exist."

case "$TARGET" in
        local) ENV=local;;
        nm) ENV=nm;;
        ch) ENV=ch;;
        stage) ENV=local;;
        stagech) ENV=local;;
        eng) ENV=local;;
		qa) ENV=local;;
        release) ENV=nm;;
esac
[ -z "$ENV" ] && die "Invalid target: $TARGET"

export PAC_UID=4000
export PAC_GID=4001
export PAC_GROUP="fk-connekt"
export PAC_USER="fk-connekt-alerts"

replacePlaceHolders() {
    file="$1"
    sed -i -e "s/_PACKAGE_/$PACKAGE/g" $file
    sed -i -e "s/_UID_/$PAC_UID/g" $file
    sed -i -e "s/_GID_/$PAC_GID/g" $file
    sed -i -e "s/_GROUP_/$PAC_GROUP/g" $file
    sed -i -e "s/_USER_/$PAC_USER/g" $file
}


# Create base dir for debian packaging
APP_DIR="$LOCAL_DIR"
BUILD_DIR="$LOCAL_DIR/build/$PACKAGE"
DEPLOY_DIR="$BUILD_DIR/deploy"
DEB_DIR="$LOCAL_DIR/deb"

# build service
cd "$APP_DIR"

# setup
mkdir -p "$DEB_DIR"
cp -r "$BUILD_DIR"/deb/DEBIAN "$DEB_DIR"
cp -r "$DEPLOY_DIR"/* "$DEB_DIR"

chmod -R 755 "$DEB_DIR/DEBIAN"

#replacing constants
replacePlaceHolders "${DEB_DIR}/DEBIAN/postinst"
replacePlaceHolders "${DEB_DIR}/DEBIAN/postrm"
replacePlaceHolders "${DEB_DIR}/DEBIAN/control"

#Modifying build.json
echo '{ "repo": "fk-connekt-alerts" }' >  "$LOCAL_DIR/.build.json"
