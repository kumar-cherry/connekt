swagger: '2.0'
info:
  title: Connekt API
  description: Fast Forward Communications with the Connekt API
  version: 1.0.0
host: connekt-sandbox.flipkart.net
schemes:
  - https
  - http
basePath: /v1
tags:
- name: "Registration"
  description: "manage device registrations"
- name: "Send"
  description: "trigger communications"
- name: "Callback"
  description: "manage events corresponding to send requests"
- name: "Report"
  description: "query events corresponding to send requests"
- name: "Admin"
  description: "manage platform clients and privileges"
- name: "Fetch"
  description: "pull based messaging operations"
- name: "Debug"
  description: "Debugger"
- name: "Stencil"
  description: "Stencil"
- name: "Suppression"
  description: "manage adding, removing, viewing of `destination` in suppression list"

produces:
  - application/json
parameters:
  channel:
    name: channel
    in: path
    description: Channel
    required: true
    type: string
    format: string
    enum: 
      - SMS
      - EMAIL
      - PUSH
  destination:
    name: destination
    in: path
    description: destination
    required: true
    type: string
    format: string
    default: "+917760947384"
  suppressionType:
    name: suppressionType
    in: path
    description: suppressionType
    required: true
    type: string
    format: string
    default: "blacklist"
  secure-code:
    name: x-secure-code
    in: header
    description: Secure Code
    required: true
    type: string
    format: string
  MPlatform:
    name: MPlatform
    in: path
    description: OS Platfrom
    required: true
    type: string
    enum:
      - android
      - ios
      - windows
      - openweb
      - unknown
    format: string
  appName:
    name: appName
    in: path
    description: AppName.
    required: true
    type: string
    format: string
  deviceId:
    name: deviceId
    in: path
    description: DeviceId.
    required: true
    type: string
    format: string
  userId:
    name: userId
    in: path
    description: userId.
    required: true
    type: string
    format: string
  messageId:
    name: messageId
    in: path
    description: MessageId.
    required: true
    type: string
    format: string
  clientName:
    name: clientName
    in: path
    description: clientName.
    required: true
    type: string
    format: string
  userType:
    name: userType
    in: path
    description: userType
    required: true
    type: string
    enum:
      - USER
      - GLOBAL
      - GROUP
    format: string
  stencilId:
    name: stencilId
    in: path
    description: stencil Id.
    required: true
    type: string
    format: string
  stencilVersion:
    name: v
    in: query
    description: stencilVersion.
    required: false
    type: string
    format: string
  bucketName:
    name: bucketName
    in: path
    description: bucketName.
    required: true
    type: string
    format: string
  StencilsEnsembleName:
    name: StencilsEnsembleName
    in: path
    description: StencilsEnsembleName.
    required: true
    type: string
    format: string
    
securityDefinitions: 
  api_key:
    type: apiKey
    name: x-api-key 
    in: header
    description: X-API-KEY (Use sandbox-key-01 as default)
    
security:
  - api_key: []

paths:
  /registration/push/{MPlatform}/{appName}/{deviceId}:
    put:
      tags:
        - "Registration"
      summary: Register New Device
      description: |
        Registrion of a new device. The token from this registration data would be used sending pn..
      parameters:
        - $ref: '#/parameters/secure-code'
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
        - name: deviceData
          in: body
          description: deviceData Defination.
          required: true
          schema:
            $ref: '#/definitions/DeviceDetails'
      responses:
        '201':
          description:  Device details created
        '200':
          description: Device details update
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - "Registration"
      summary: Update some fields of registered device
      description: |
        Update some fields of registered device like userid , token.
      parameters:
        - $ref: '#/parameters/secure-code'
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
        - name: deviceData
          in: body
          description: deviceData Defination.
          required: true
          schema:
            $ref: '#/definitions/DeviceDetails'
      responses:
        '200':
          description:  Device details update
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get Device Details
      description: |
       Fetch device details for specific device
      parameters:
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
      tags:
        - Registration
      responses:
        '200':
          description: Device details
    delete:
      summary: Delete Device
      description: |
       Delete specific device
      tags:
        - Registration
      parameters:
        - $ref: '#/parameters/secure-code'
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
      responses:
        '200':
          description: Device deleted succesfully
  /registration/push/{appName}/users/{userId}:
    get:
      tags:
      - "Registration"
      operationId: "getRegistrationForUserId"
      summary: "fetch user device(s) registration"
      description: "fetch registration info for user's devices"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/userId'
      responses:
        200:
          description: "device(s) details fetched for user"
        404:
          description: "no device details found for user"
  /send/push/{MPlatform}/{appName}:
    post:
      summary: Send Push Notification
      description: |
        Send a new push notification to a given set of devices.
      parameters:
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - name: ConnektRequest
          in: body
          description: ConnektRequest.
          required: true
          schema:
            $ref: '#/definitions/ConnektRequest'
      tags:
        - "Send"
      responses:
        '201':
          description:  PN Created
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /send/push/{MPlatform}/{appName}/users/{userId}:
    post:
      summary: Send Push Notification to User
      description: |
        Send a new push notification all devices of given user and platform.
      parameters:
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/userId'
        - name: ConnektRequest
          in: body
          description: ConnektRequest.
          required: true
          schema:
            $ref: '#/definitions/ConnektRequest'
      tags:
        - "Send"
      responses:
        '201':
          description:  PN Created
        '404':
          description:  No valid devices found for given userId
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /send/email/{appName}:
    post:
      summary: Send Emails to User(s)
      description: |
        Send emails to multiple addresses.
      parameters:
        - $ref: '#/parameters/appName'
        - name: ConnektRequest
          in: body
          description: ConnektRequest.
          required: true
          schema:
            $ref: '#/definitions/ConnektRequest'
      tags:
        - "Send"
      responses:
        '202':
          description:  Request Accepted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /send/sms/{appName}:
    post:
      summary: Send Sms to User(s)
      description: |
        Send sms to multiple numbers.
      parameters:
        - $ref: '#/parameters/appName'
        - name: ConnektRequest
          in: body
          description: ConnektRequest.
          required: true
          schema:
            $ref: '#/definitions/ConnektRequest'
      tags:
        - "Send"
      responses:
        '202':
          description:  Request Accepted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resend/{channel}/{appName}/{messageId}:
      post:
        summary: Resend given messageId
        description: |
          Resend given messageId
        parameters:
          - $ref: '#/parameters/channel'
          - $ref: '#/parameters/appName'
          - $ref: '#/parameters/messageId'
        tags:
          - "Send"
        responses:
          '202':
            description:  Request Accepted
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  /push/callback/{MPlatform}/{appName}/{deviceId}:
    post:
      summary: Notification Callback
      description: |
        Callback's for notifications
      parameters:
        - $ref: '#/parameters/secure-code'
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
        - name: callbackEvent
          in: body
          description: CallbackEvent.
          required: true
          schema:
            type: object
      tags:
        - "Callback"
      responses:
        '200':
          description:  Callback Accepted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /push/callback/{MPlatform}/{appName}/{deviceId}/{messageId}:
    delete:
      tags:
      - "Callback"
      operationId: "deleteCallbackEvents"
      summary: "delete callback events of a connekt request"
      description: "delete callback events of a connekt request"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
        - $ref: '#/parameters/messageId'
      responses:
        200:
          description: "callback events deleted for messageId."
  /email/callback/{appName}/{providerId}:
    post:
      tags:
      - "Callback"
      summary: "email provider callback events of a connekt request"
      description: "email callback events of a connekt request. Dynamic payload is accepted in this method, which are transformed via providerId webhook stencil."
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/appName'
        - name: providerId
          in: path
          description: providerName.
          required: true
          type: string
      responses:
        200:
          description: "callback events accepted for messageId."
  /sms/callback/{appName}/{providerId}:
    post:
      tags:
      - "Callback"
      summary: "sms provider callback events of a connekt request"
      description: "sms callback events of a connekt request. Dynamic payload is accepted in this method, which are transformed via providerId webhook stencil."
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/appName'
        - name: providerId
          in: path
          description: providerName.
          required: true
          type: string
      responses:
        200:
          description: "callback events accepted for messageId."
  /fetch/push/{MPlatform}/{appName}/{deviceId}:
    get:
      summary: Fetch Notifications
      description: |
        Fetch Pending Notifications for given device
      parameters:
        - $ref: '#/parameters/MPlatform'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
        - name: startTs
          in: query
          description: StartTS.
          required: true
          type: number
          format: long
        - name: endTs
          in: query
          description: EndTS.
          required: false
          type: number
          format: long
        - name: skipIds
          in: query
          description: Skip Specific MessageIds
          required: false
          type: string
      tags:
        - "Fetch"
      responses:
        '200':
          description:  List of PN
        '400':
          description:  Invalid StartTS
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reports/{channel}/{appName}/messages/{deviceId}:
    get:
      summary: Fetch Notifications by device ID
      description: |
        Fetch messages sent for given device ID
      parameters:
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/deviceId'
        - name: startTs
          in: query
          description: StartTS.
          required: false
          type: number
          format: long
      tags:
        - "Report"
      responses:
        '200':
          description:  List of PN
        '400':
          description:  Invalid StartTS
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reports/{channel}/{appName}/messages/{deviceId}/{messageId}/events:
    get:
      summary: MessageId/DeviceId Events
      description: |
        Callback's for notifications
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/deviceId'
        - $ref: '#/parameters/messageId'
      tags:
        - "Report"
      responses:
        '200':
          description:  Events
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reports/{channel}/messages/{messageId}/events:
    get:
      summary: Message Events
      description: |
        Event's for given MessageId
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/messageId'
      tags:
        - "Report"
      responses:
        '200':
          description:  Events
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reports/{channel}/messages/{messageId}:
    get:
      summary: Send Request Data
      description: |
        Get Request Payload
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/messageId'
      tags:
        - "Report"
      responses:
        '200':
          description:  Original Request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /reports/date/{date}:
    get:
      summary: Per Date Statistics
      description: |
        Get live statistics grouped per day
      parameters:
        - name: date
          in: path
          description: date.
          required: true
          type: string
        - name: clientId
          in: query
          description: clientId.
          required: true
          type: string
        - name: contextId
          in: query
          description: contextId.
          required: false
          type: string
        - name: appName
          in: query
          description: appName.
          required: false
          type: string
        - name: stencilId
          in: query
          description: stencilId.
          required: false
          type: string
      tags:
        - "Report"
      responses:
        '200':
          description:  Original Request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /client/{clientName}:
    get:
      tags:
      - "Admin"
      operationId: "getClientInfo"
      summary: "fetch api-key for clientName"
      description: "fetch api-key for clientName"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/clientName'
      responses:
        200:
          description: "client api-key fetched for clientName"
        404:
          description: "no api-key found for clientName"
  /client/{clientName}/config:
    get:
      tags:
      - "Admin"
      operationId: "getClientConfiguration"
      summary: "fetch configuration for clientName"
      description: "fetch configuration for clientName"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/clientName'
      responses:
        200:
          description: "client config fetched for clientName"
  /client/create:
    post:
      tags:
      - "Admin"
      operationId: "createClient"
      summary: "create client & assign api-key, groups."
      description: "create client & assign api-key, groups."
      produces:
      - "application/json"
      parameters:
        - name: AppUser
          in: body
          description: AppUser.
          required: true
          schema:
            $ref: '#/definitions/AppUser'
      responses:
        200:
          description: "client created and assigned group, api-key."
  /client/create/{clientName}/configuration:
    put:
      tags:
      - "Admin"
      operationId: "configureClientSla"
      summary: "create client & assign api-key, groups."
      description: "create client & assign api-key, groups."
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/clientName'
        - name: appUserConfig
          in: body
          description: appUserConfig.
          required: true
          schema:
            $ref: '#/definitions/AppUserConfiguration'
      responses:
        200:
          description: "client created and assigned group, api-key."
  /client/grant/{userType}/{userId}:
    post:
      tags:
      - "Admin"
      operationId: "grantResourceAccess"
      summary: "provide user and group resource access to clients."
      description: "provide user and group resource access to clients."
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/userType'
        - $ref: '#/parameters/userId'
        - name:  grantResourceAccess
          in: body
          description: grantResourceAccess
          required: true
          schema:
            $ref: '#/definitions/ResourcePriv'
      responses:
        201:
          description: "granted access to requested resources"
        404:
          description: "no api-key found for clientName"
        400:
          description: "while user does not existed for user level access"

  /client/revoke/{userType}/{userId}:
   post:
    tags:
      - "Admin"
    operationId: "revokeResourceAccess"
    summary: "revoke user and group resource access to clients."
    description: "revoke user and group resource access to clients."
    produces:
      - "application/json"
    parameters:
        - $ref: '#/parameters/userType'
        - $ref: '#/parameters/userId'
        - name:  revokeResourceAccess
          in: body
          description: revokeResourceAccess
          required: true
          schema:
            $ref: '#/definitions/ResourcePriv'
    responses:
        201:
          description: "revoked access to requested resources"
        404:
          description: "no api-key found for clientName"
        400:
          description: "while user does not existed for user level access"
  /project/config/{appName}:
   get:
    tags:
      - "Admin"
    summary: "get project configurations for given app."
    description: "list appName specific configurations."
    produces:
      - "application/json"
    parameters:
        - $ref: '#/parameters/appName'
    responses:
        200:
          description: "list of project configs"

  /project/config/{appName}/{propertyName}:
   get:
    tags:
      - "Admin"
    summary: "get project specific config"
    description: "get appName/propertyName configuration"
    produces:
      - "application/json"
    parameters:
        - $ref: '#/parameters/appName'
        - name: propertyName
          in: path
          description: propertyName.
          required: true
          type: string
    responses:
        200:
          description: "propertyName details"
   put:
    tags:
      - "Admin"
    summary: "update project specific config"
    description: "update appName/propertyName configuration"
    produces:
      - "application/json"
    parameters:
        - $ref: '#/parameters/appName'
        - name: propertyName
          in: path
          description: propertyName.
          required: true
          type: string
        - name: propertyConfig
          in: body
          description: propertyConfig.
          required: true
          schema:
            $ref: '#/definitions/UserProjectConfig'

    responses:
        200:
          description: "propertyName details"


  /debugger/secure-code/generate:
    get:
      summary: Generate Secure Code
      description: |
        Generate Secure Code for given set of keys
      parameters:
        - name: keys
          in: query
          description: Comma Separated Keys for Token Generation.
          required: true
          type: string
      tags:
        - "Debug"
      responses:
        '200':
          description:  Secure Code
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /stencils/bucket/{bucketName}:
    post:
      summary: creating bucket
      description: |
        creating bucket for user
      parameters:
        - name: bucketName
          in: path
          description: bucketName.
          required: true
          type: string
          format: string
      tags:
        - "Stencil"
      responses:
        '200':
          description:  bucket Create
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: get bucket data
      description: |
        get bucket data, returns also all stencilIds in the bucket
      parameters:
        - $ref: '#/parameters/bucketName'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  Original Request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /stencils/components/registry:
    post:
      summary: creating stencil ENSEMBLE
      description: |
        creating stencil
      parameters:
        - name: createStencil
          in: body
          description: createStencil.
          required: true
          schema:
            $ref: '#/definitions/StencilsEnsemble'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  stencil Ensemble Create
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: get all stencil ENSEMBLE
      description: |
        get all stencil ENSEMBLE
      tags:
        - "Stencil"
      responses:
        '200':
          description:  Original Request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /stencils/components/registry/{StencilsEnsembleName}:
    put:
      summary: update stencil ENSEMBLE
      description: |
        creating stencil
      parameters:
        - $ref: '#/parameters/StencilsEnsembleName'
        - name: updateStencil
          in: body
          description: updateStencil.
          required: true
          schema:
            $ref: '#/definitions/StencilsEnsemble'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  stencil Ensemble Updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: get stencil ENSEMBLE
      description: |
        get stencil ENSEMBLE
      parameters:
        - $ref: '#/parameters/StencilsEnsembleName'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  Original Request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /stencils:
    post:
      summary: creating stencil
      description: |
        creating stencil
      parameters:
        - name: createStencil
          in: body
          description: createStencil.
          required: true
          schema:
            $ref: '#/definitions/Stencil'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  stencil Create
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /stencils/{stencilId}:
    get:
      summary: get stencil data
      description: |
        get stencil data
      parameters:
        - $ref: '#/parameters/stencilId'
        - $ref: '#/parameters/stencilVersion'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  Original Request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: updating stencil
      description: |
        updating stencil
      parameters:
        - $ref: '#/parameters/stencilId'
        - name: updateStencil
          in: body
          description: updateStencil.
          required: true
          schema:
            $ref: '#/definitions/Stencil'
      tags:
        - "Stencil"
      responses:
        '200':
          description:  stencil Create
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /stencils/{stencilId}/preview:
    post:
      summary: previewing stencil
      description: |
        previewing stencil
      parameters:
        - $ref: '#/parameters/stencilId'
        - $ref: '#/parameters/stencilVersion'
        - name: stencilPayload
          in: body
          description: Stencil Payload
          required: true
          schema:
            type: object
      tags:
        - "Stencil"
      responses:
        '200':
          description:  stencil preview
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /suppressions/{channel}/{appName}/{suppressionType}/{destination}:
    put:
      tags:
        - "Suppressions"
      summary: Add destination to suppression list
      description: |
        Adding destination to suppression list, to restrict sending communication to destination
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/suppressionType'
        - $ref: '#/parameters/destination'
        - name: metaInfo
          in: body
          description: reason for adding destination to suppression list.
          required: true
          schema:
            $ref: '#/definitions/Suppressions'
      responses:
        '201':
          description:  Suppression request received for destination
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - "Suppressions"
      summary: Add destination to suppression list
      description: |
        Adding destination to suppression list, to restrict sending communication to destination
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/suppressionType'
        - $ref: '#/parameters/destination'
      responses:
        '201':
          description:  Suppression request received for destination
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /suppressions/{channel}/{appName}/{suppressionType}/all:
    get:
      tags:
      -  "Suppressions"
      operationId: "getAllDestinationInSuppressionType"
      summary: "Fetch all destinations in suppression type"
      description: "Fetch all destinations in suppression type for channel and appname"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/suppressionType'
      responses:
        200:
          description: "Get Suppression list for channel `{channel}`, appname `{appname}` and exclusionType `{exclusionType}`"
  /suppressions/{channel}/{appName}/{destination}:
    get:
      tags:
      - "Suppressions"
      operationId: "getAllSuppressionTypeForDestination"
      summary: "Fetch all suppression type for destination"
      description: "Fetch all suppression type for destination, channel and appname"
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/destination'
      responses:
        200:
          description: "Suppression get request received for destination"
    delete:
      summary: Delete destination from suppression list
      description: |
       Delete destination from suppression list
      tags:
        - Suppressions
      parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/appName'
        - $ref: '#/parameters/destination'
      responses:
        '200':
          description: Device deleted succesfully

definitions:
  DeviceDetails:
    type: object
    properties:
      state:
        type: string
        description: An app specific state when this request was triggered.
      model:
        type: string
        description: model of Device
      token:
        type: string
        description: Token.
      brand:
        type: string
        description: brand of Device
      appVersion:
        type: string
        description: appVersion of Device
      osVersion:
        type: string
        description: osVersion of Device.
      userId:
        type: string
        description: UserId
  ConnektRequest:
    type: object
    properties:
      channel:
        type: string
        description: Channel (PN/EMAIL/SMS)
        default: "PN"
        enum:
          - PN
          - EMAIL
      sla:
        type: string
        description: SLA (L/M/H)
        default: "L"
        enum:
          - L
          - M
          - H
      stencilId:
        type: string
        description: Optional StencilId
      contextId:
        type: string
        description: Optional contextId for tracking
      expiryTs:
        type: number
        format: long
        description: Expiry Epoch Time in Millis
      scheduleTs:
        type: number
        format: long
        description: ScheduledTS in Millis (Min 2 mins ahead of request time, granularity of 5 minutes)
      channelInfo:
        type: object
        description:  PN Channel Info
        properties:
          deviceIds:
            type: array
            items:
              type: string
            description: List of Destination DeviceIds
          ackRequired:
            type: boolean
            description : ackRequired
            default : false
          delayWhileIdle:
            type: boolean
            description : delayWhileIdle
            default : true
      channelData:
        type: object
        description:  Channel Payload, incase channelDataModel is not provided.
      channelDataModel:
        type: object
        description:  Data Model to be rendered incase stencilId is provided

  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      request:
        type: object
      response:
        type: object
        properties:
          message:
            type: string
            description: Error Message
  AppUser:
    type: object
    properties:
      userId:
        type: string
        description: userId / clientName of app user
      groups:
        type: string
        description: comma separated list of groups
      contact:
        type: string
        description: reference email-id for app user
  AppUserConfiguration:
    type: object
    properties:
      channel:
        type: string
        enum:
        - push
        - email
        - sms
        description: channel to configure sla
      maxRate:
        type: integer
        format: int32
        description: max-rate for channel
      platforms:
        type: string
        description: sending platforms (android / ios / windows / openweb)
  UserProjectConfig:
    type: object
    properties:
      format:
        type: string
        enum:
        - STRING
        - JSON
        description: the serialisation format
      value:
        type: string
        description: the serialized value of the config
  ResourcePriv:
    type: object
    properties:
      resources:
        type: string
        description: resource list
  Stencil:
    type: object
    properties:
      name:
        type: string
        description: stencil id
      type:
        type: string
        description: stencil type
      bucket:
        type: string
        description: stencil id
      components:
        type: array
        items:
          $ref: '#/definitions/StencilComponent'

  StencilComponent:
    type: object
    properties:
      type:
        type: string
        description: stencil type
      component:
        type: string
        description: stencil component
      engine:
        type: string
        enum:
        - VELOCITY
        - GROOVY
        description: engine GROOVY/VELOCITY
      engineFabric:
        type: string
        description: VELOCITY/GROOVY script
  StencilsEnsemble:
    type: object
    properties:
      name:
        type: string
        description: ensemble name
      components:
        type: string
        description: ensemble components
  Suppressions:
    type: object
    properties:
      channel:
        type: string
        description: Channel (EMAIL/SMS)
        default: "SMS"
        enum:
          - SMS
          - EMAIL
      suppressionType:
        type: string
        description: ExclusionType (BLACKLIST/SHORT_TERM_FAILURE/LONG_TERM_FAILURE/INTERMEDIATE_TERM_FAILURE/SPAM)
        enum:
          - BLACKLIST
          - SHORT_TERM_FAILURE
          - LONG_TERM_FAILURE
          - INTERMEDIATE_TERM_FAILURE
          - SPAM
      appName:
        type: string
        description: Appname
      metaInfo:
        type: string
        description: metaInfo to store reason for suppression list
      destination:
        type: string
        description: destination to add in exclusion type
